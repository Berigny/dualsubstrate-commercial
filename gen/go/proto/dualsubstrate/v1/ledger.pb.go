// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: dualsubstrate/v1/ledger.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------- Messages ---------
type QuaternionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// q = [w, x, y, z] or your chosen convention; keep length=4
	Q []float32 `protobuf:"fixed32,1,rep,packed,name=q,proto3" json:"q,omitempty"`
	// optional vector to rotate (len=3). If omitted, server uses a default basis.
	Vec           []float32 `protobuf:"fixed32,2,rep,packed,name=vec,proto3" json:"vec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuaternionRequest) Reset() {
	*x = QuaternionRequest{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuaternionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuaternionRequest) ProtoMessage() {}

func (x *QuaternionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuaternionRequest.ProtoReflect.Descriptor instead.
func (*QuaternionRequest) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *QuaternionRequest) GetQ() []float32 {
	if x != nil {
		return x.Q
	}
	return nil
}

func (x *QuaternionRequest) GetVec() []float32 {
	if x != nil {
		return x.Vec
	}
	return nil
}

type QuaternionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// rotated vector (len=3)
	Vec           []float32 `protobuf:"fixed32,1,rep,packed,name=vec,proto3" json:"vec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuaternionResponse) Reset() {
	*x = QuaternionResponse{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuaternionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuaternionResponse) ProtoMessage() {}

func (x *QuaternionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuaternionResponse.ProtoReflect.Descriptor instead.
func (*QuaternionResponse) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *QuaternionResponse) GetVec() []float32 {
	if x != nil {
		return x.Vec
	}
	return nil
}

type LedgerEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        string                 `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	R             []byte                 `protobuf:"bytes,2,opt,name=r,proto3" json:"r,omitempty"`    // opaque R payload (or pointer/id)
	P             []byte                 `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`    // opaque Qp payload (prefix-indexable bytes)
	Ts            uint64                 `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"` // big-endian-friendly timestamp; server may override
	Meta          map[string]string      `protobuf:"bytes,5,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgerEntry) Reset() {
	*x = LedgerEntry{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerEntry) ProtoMessage() {}

func (x *LedgerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerEntry.ProtoReflect.Descriptor instead.
func (*LedgerEntry) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *LedgerEntry) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *LedgerEntry) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *LedgerEntry) GetP() []byte {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *LedgerEntry) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LedgerEntry) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AppendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Entry *LedgerEntry           `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	// idempotency key; if empty, server can derive from (entity, ts)
	IdemKey       string `protobuf:"bytes,2,opt,name=idem_key,json=idemKey,proto3" json:"idem_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendRequest) Reset() {
	*x = AppendRequest{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendRequest) ProtoMessage() {}

func (x *AppendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendRequest.ProtoReflect.Descriptor instead.
func (*AppendRequest) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *AppendRequest) GetEntry() *LedgerEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *AppendRequest) GetIdemKey() string {
	if x != nil {
		return x.IdemKey
	}
	return ""
}

type AppendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            uint64                 `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	CommitId      string                 `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"` // e.g., entity/ts or your batch anchor id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendResponse) Reset() {
	*x = AppendResponse{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResponse) ProtoMessage() {}

func (x *AppendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResponse.ProtoReflect.Descriptor instead.
func (*AppendResponse) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *AppendResponse) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *AppendResponse) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

type ScanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PPrefix       []byte                 `protobuf:"bytes,1,opt,name=p_prefix,json=pPrefix,proto3" json:"p_prefix,omitempty"` // raw prefix (not hex string)
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Reverse       bool                   `protobuf:"varint,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{5}
}

func (x *ScanRequest) GetPPrefix() []byte {
	if x != nil {
		return x.PPrefix
	}
	return nil
}

func (x *ScanRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ScanRequest) GetReverse() bool {
	if x != nil {
		return x.Reverse
	}
	return false
}

type LedgerRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        string                 `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Ts            uint64                 `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	R             []byte                 `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
	P             []byte                 `protobuf:"bytes,4,opt,name=p,proto3" json:"p,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgerRow) Reset() {
	*x = LedgerRow{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgerRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerRow) ProtoMessage() {}

func (x *LedgerRow) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerRow.ProtoReflect.Descriptor instead.
func (*LedgerRow) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{6}
}

func (x *LedgerRow) GetEntity() string {
	if x != nil {
		return x.Entity
	}
	return ""
}

func (x *LedgerRow) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *LedgerRow) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *LedgerRow) GetP() []byte {
	if x != nil {
		return x.P
	}
	return nil
}

type ScanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*LedgerRow           `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanResponse) Reset() {
	*x = ScanResponse{}
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResponse) ProtoMessage() {}

func (x *ScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dualsubstrate_v1_ledger_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResponse.ProtoReflect.Descriptor instead.
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return file_dualsubstrate_v1_ledger_proto_rawDescGZIP(), []int{7}
}

func (x *ScanResponse) GetRows() []*LedgerRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

var File_dualsubstrate_v1_ledger_proto protoreflect.FileDescriptor

const file_dualsubstrate_v1_ledger_proto_rawDesc = "" +
	"\n" +
	"\x1ddualsubstrate/v1/ledger.proto\x12\x10dualsubstrate.v1\x1a\x1cgoogle/api/annotations.proto\"3\n" +
	"\x11QuaternionRequest\x12\f\n" +
	"\x01q\x18\x01 \x03(\x02R\x01q\x12\x10\n" +
	"\x03vec\x18\x02 \x03(\x02R\x03vec\"&\n" +
	"\x12QuaternionResponse\x12\x10\n" +
	"\x03vec\x18\x01 \x03(\x02R\x03vec\"\xc7\x01\n" +
	"\vLedgerEntry\x12\x16\n" +
	"\x06entity\x18\x01 \x01(\tR\x06entity\x12\f\n" +
	"\x01r\x18\x02 \x01(\fR\x01r\x12\f\n" +
	"\x01p\x18\x03 \x01(\fR\x01p\x12\x0e\n" +
	"\x02ts\x18\x04 \x01(\x04R\x02ts\x12;\n" +
	"\x04meta\x18\x05 \x03(\v2'.dualsubstrate.v1.LedgerEntry.MetaEntryR\x04meta\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"_\n" +
	"\rAppendRequest\x123\n" +
	"\x05entry\x18\x01 \x01(\v2\x1d.dualsubstrate.v1.LedgerEntryR\x05entry\x12\x19\n" +
	"\bidem_key\x18\x02 \x01(\tR\aidemKey\"=\n" +
	"\x0eAppendResponse\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\x04R\x02ts\x12\x1b\n" +
	"\tcommit_id\x18\x02 \x01(\tR\bcommitId\"X\n" +
	"\vScanRequest\x12\x19\n" +
	"\bp_prefix\x18\x01 \x01(\fR\apPrefix\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x18\n" +
	"\areverse\x18\x03 \x01(\bR\areverse\"O\n" +
	"\tLedgerRow\x12\x16\n" +
	"\x06entity\x18\x01 \x01(\tR\x06entity\x12\x0e\n" +
	"\x02ts\x18\x02 \x01(\x04R\x02ts\x12\f\n" +
	"\x01r\x18\x03 \x01(\fR\x01r\x12\f\n" +
	"\x01p\x18\x04 \x01(\fR\x01p\"?\n" +
	"\fScanResponse\x12/\n" +
	"\x04rows\x18\x01 \x03(\v2\x1b.dualsubstrate.v1.LedgerRowR\x04rows2\xc8\x02\n" +
	"\rDualSubstrate\x12j\n" +
	"\x06Rotate\x12#.dualsubstrate.v1.QuaternionRequest\x1a$.dualsubstrate.v1.QuaternionResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v1/rotate\x12b\n" +
	"\x06Append\x12\x1f.dualsubstrate.v1.AppendRequest\x1a .dualsubstrate.v1.AppendResponse\"\x15\x82\xd3\xe4\x93\x02\x0f:\x01*\"\n" +
	"/v1/append\x12g\n" +
	"\n" +
	"ScanPrefix\x12\x1d.dualsubstrate.v1.ScanRequest\x1a\x1e.dualsubstrate.v1.ScanResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/scan_prefixBNZLgithub.com/berigny/dualsubstrate-commercial/gen/go/proto/dualsubstrate/v1;v1b\x06proto3"

var (
	file_dualsubstrate_v1_ledger_proto_rawDescOnce sync.Once
	file_dualsubstrate_v1_ledger_proto_rawDescData []byte
)

func file_dualsubstrate_v1_ledger_proto_rawDescGZIP() []byte {
	file_dualsubstrate_v1_ledger_proto_rawDescOnce.Do(func() {
		file_dualsubstrate_v1_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dualsubstrate_v1_ledger_proto_rawDesc), len(file_dualsubstrate_v1_ledger_proto_rawDesc)))
	})
	return file_dualsubstrate_v1_ledger_proto_rawDescData
}

var file_dualsubstrate_v1_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dualsubstrate_v1_ledger_proto_goTypes = []any{
	(*QuaternionRequest)(nil),  // 0: dualsubstrate.v1.QuaternionRequest
	(*QuaternionResponse)(nil), // 1: dualsubstrate.v1.QuaternionResponse
	(*LedgerEntry)(nil),        // 2: dualsubstrate.v1.LedgerEntry
	(*AppendRequest)(nil),      // 3: dualsubstrate.v1.AppendRequest
	(*AppendResponse)(nil),     // 4: dualsubstrate.v1.AppendResponse
	(*ScanRequest)(nil),        // 5: dualsubstrate.v1.ScanRequest
	(*LedgerRow)(nil),          // 6: dualsubstrate.v1.LedgerRow
	(*ScanResponse)(nil),       // 7: dualsubstrate.v1.ScanResponse
	nil,                        // 8: dualsubstrate.v1.LedgerEntry.MetaEntry
}
var file_dualsubstrate_v1_ledger_proto_depIdxs = []int32{
	8, // 0: dualsubstrate.v1.LedgerEntry.meta:type_name -> dualsubstrate.v1.LedgerEntry.MetaEntry
	2, // 1: dualsubstrate.v1.AppendRequest.entry:type_name -> dualsubstrate.v1.LedgerEntry
	6, // 2: dualsubstrate.v1.ScanResponse.rows:type_name -> dualsubstrate.v1.LedgerRow
	0, // 3: dualsubstrate.v1.DualSubstrate.Rotate:input_type -> dualsubstrate.v1.QuaternionRequest
	3, // 4: dualsubstrate.v1.DualSubstrate.Append:input_type -> dualsubstrate.v1.AppendRequest
	5, // 5: dualsubstrate.v1.DualSubstrate.ScanPrefix:input_type -> dualsubstrate.v1.ScanRequest
	1, // 6: dualsubstrate.v1.DualSubstrate.Rotate:output_type -> dualsubstrate.v1.QuaternionResponse
	4, // 7: dualsubstrate.v1.DualSubstrate.Append:output_type -> dualsubstrate.v1.AppendResponse
	7, // 8: dualsubstrate.v1.DualSubstrate.ScanPrefix:output_type -> dualsubstrate.v1.ScanResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dualsubstrate_v1_ledger_proto_init() }
func file_dualsubstrate_v1_ledger_proto_init() {
	if File_dualsubstrate_v1_ledger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dualsubstrate_v1_ledger_proto_rawDesc), len(file_dualsubstrate_v1_ledger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dualsubstrate_v1_ledger_proto_goTypes,
		DependencyIndexes: file_dualsubstrate_v1_ledger_proto_depIdxs,
		MessageInfos:      file_dualsubstrate_v1_ledger_proto_msgTypes,
	}.Build()
	File_dualsubstrate_v1_ledger_proto = out.File
	file_dualsubstrate_v1_ledger_proto_goTypes = nil
	file_dualsubstrate_v1_ledger_proto_depIdxs = nil
}
